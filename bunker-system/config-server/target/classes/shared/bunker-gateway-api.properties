server.port=8080
spring.application.name=bunker-gateway-api
eureka.instance.hostname=localhost
eureka.client.healthcheck.enabled=true
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
spring.cloud.config.uri=http://localhost:8888
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.registry-fetch-interval-seconds=5
eureka.instance.prefer-ip-address=true
eureka.instance.metadata-map.startup=${random.int}
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.zipkin.service.name=Bunker-Gateway-API
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0
spring.zipkin.sender.type=web
spring.cloud.discovery.client.health-indicator.include-description=true
spring.cloud.gateway.filter.add-request-header.enabled=true
spring.cloud.gateway.filter.add-response-header.enabled=true
spring.cloud.gateway.filter.remove-request-header.enabled=false
spring.cloud.config.headers.X-Correlation-ID=${random.uuid}
spring.cloud.gateway.default-filters[0]=SetRequestHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.actuator.verbose.enabled=true

management.server.add-application-context-header=true
management.endpoints.enabled-by-default=true
management.endpoints.web.exposure.include=*,jolokia
management.endpoints.jmx.exposure.include=*
management.endpoint.jolokia.config.debug=true
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-components=always
management.endpoint.health.show-details=always
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
eureka.client.webclient.enabled=true

spring.jmx.enabled=true
spring.jmx.unique-names=true

info.application.name=${spring.application.name}
info.application.description=An application providing the proxy functionality.
info.application.version=@build.version@
info.application.encoding=@project.build.sourceEncoding@
info.application.java.version=@java.version@
info.author.first-name=\u0141ukasz
info.author.last-name=Przesmycki
info.author.name=${info.author.first-name} ${info.author.last-name}


spring.cloud.gateway.routes[0].id=microservice1
spring.cloud.gateway.routes[0].uri=lb://BUNKER-MICROSERVICE-1
spring.cloud.gateway.routes[0].predicates[0]=Path=/microservice1/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=0
spring.cloud.gateway.routes[0].filters[1]=SetRequestHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[0].filters[2]=SetResponseHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[0].filters[3]=DedupeResponseHeader=X-Correlation-ID, RETAIN_FIRST

spring.cloud.gateway.routes[1].id=microservice2
spring.cloud.gateway.routes[1].uri=lb://BUNKER-MICROSERVICE-2
spring.cloud.gateway.routes[1].predicates[0]=Path=/microservice2/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=0
#spring.cloud.gateway.routes[1].filters[0].name=AddRequestHeader
spring.cloud.gateway.routes[1].filters[1]=SetRequestHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[1].filters[2]=SetResponseHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[1].filters[3]=DedupeResponseHeader=X-Correlation-ID, RETAIN_FIRST

spring.cloud.gateway.routes[2].id=hystrix-dashboard
spring.cloud.gateway.routes[2].uri=lb://HYSTRIX-DASHBOARD
spring.cloud.gateway.routes[2].predicates[0]=Path=/hystrix/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1
#spring.cloud.gateway.routes[2].filters[0].name=AddRequestHeader
spring.cloud.gateway.routes[2].filters[1]=SetRequestHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[2].filters[2]=SetResponseHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[2].filters[3]=DedupeResponseHeader=X-Correlation-ID, RETAIN_FIRST

spring.cloud.gateway.routes[3].id=admin
spring.cloud.gateway.routes[3].uri=lb://ADMIN
spring.cloud.gateway.routes[3].predicates[0]=Path=/admin/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=0
#spring.cloud.gateway.routes[3].filters[0].name=AddRequestHeader
spring.cloud.gateway.routes[3].filters[1]=SetRequestHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[3].filters[2]=SetResponseHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[3].filters[3]=DedupeResponseHeader=X-Correlation-ID, RETAIN_FIRST

spring.cloud.gateway.routes[4].id=config-server
spring.cloud.gateway.routes[4].uri=lb://CONFIG-SERVER
spring.cloud.gateway.routes[4].predicates[0]=Path=/config/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=0
#spring.cloud.gateway.routes[4].filters[0].name=AddRequestHeader
spring.cloud.gateway.routes[4].filters[1]=SetRequestHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[4].filters[2]=SetResponseHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[4].filters[3]=DedupeResponseHeader=X-Correlation-ID, RETAIN_FIRST


spring.cloud.gateway.routes[5].id=ldap-server
spring.cloud.gateway.routes[5].uri=lb://LDAP-SERVER
spring.cloud.gateway.routes[5].predicates[0]=Path=/users/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=0
#spring.cloud.gateway.routes[5].filters[0].name=AddRequestHeader
spring.cloud.gateway.routes[5].filters[1]=SetRequestHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[5].filters[2]=SetResponseHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[5].filters[3]=DedupeResponseHeader=X-Correlation-ID, RETAIN_FIRST

spring.cloud.gateway.routes[6].id=auth-server
spring.cloud.gateway.routes[6].uri=lb://AUTH-SERVICE
spring.cloud.gateway.routes[6].predicates[0]=Path=/uaa**
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=0
#spring.cloud.gateway.routes[6].filters[0].name=AddRequestHeader
spring.cloud.gateway.routes[6].filters[1]=SetRequestHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[6].filters[2]=SetResponseHeader=X-Correlation-ID, ${random.uuid}
spring.cloud.gateway.routes[6].filters[3]=DedupeResponseHeader=X-Correlation-ID, RETAIN_FIRST
server.port=8082
server.servlet.context-path=/uaa
spring.application.name=auth-service
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
spring.cloud.config.uri=http://localhost:8888
spring.cloud.config.fail-fast=true
eureka.instance.metadata-map.startup=${random.int}
eureka.instance.metadata-map.management.context-path=${server.servlet.context-path}/actuator

eureka.client.registry-fetch-interval-seconds=5
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.healthcheck.enabled=true

management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*,jolokia
management.endpoint.jolokia.config.debug=true
management.endpoints.jmx.exposure.include=*
spring.jmx.enabled=true
spring.jmx.unique-names=true

info.application.name=${spring.application.name}
info.application.description=Authorization Service
info.application.version=@build.version@
info.application.encoding=@project.build.sourceEncoding@
info.application.java.version=@java.version@
info.author.first-name=\u0141ukasz
info.author.last-name=Przesmycki
info.author.name=${info.author.first-name} ${info.author.last-name}


## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/oauth-db
spring.datasource.username=oauth-user
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true



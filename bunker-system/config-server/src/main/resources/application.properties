#the port where the config-server will be acessible
server.port=8888
spring.application.name=config-server
spring.application.admin.enabled=true

 #we are using native because the config server uses a git repo by default
spring.profiles.active=native

#tells spring where to locate the config files
spring.cloud.config.server.native.search-locations=classpath:/shared
#spring.cloud.config.server.git.uri=${user.home}/config-repo
#spring.cloud.config.server.git.clone-on-start=true

eureka.client.service-url.defaultZone=http://localhost:8010/eureka
eureka.client.healthcheck.enabled=true
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=2
info.application.name=@project.name@
info.application.code-name=${spring.application.name}
info.application.description=Configuration Server to provide a configuration for a registered applications
info.application.version=@project.version@
info.application.encoding=@project.build.sourceEncoding@
info.application.java.version=@java.version@
info.application.url=http://${eureka.instance.home-page-url}


info.author.first-name=\u0141ukasz
info.author.last-name=Przesmycki
info.author.name=${info.author.first-name} ${info.author.last-name}

info.cloud.instance.name=${eureka.instance.appname}
info.cloud.instance.id=${eureka.instance.instance-id}
info.cloud.instance.hostname=${eureka.instance.hostname}
#logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- })[ %X{CorrelationId} ]{magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
spring.zipkin.service.name=Config-Server
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0
spring.zipkin.sender.type=web
management.endpoints.web.exposure.include=*,jolokia
management.endpoints.jmx.exposure.include=*
management.endpoint.jolokia.config.debug=true
management.endpoint.health.show-details=always
spring.jmx.enabled=true
spring.jmx.unique-names=true
logging.file.name=config-server.log
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
spring.application.name=auth-service

eureka.instance.lease-renewal-interval-in-seconds=10
#eureka.instance.health-check-url=/actuator/health
eureka.instance.metadata-map.startup=${random.int}
eureka.client.registry-fetch-interval-seconds=5
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
spring.cloud.config.uri=http://localhost:8888
spring.cloud.config.fail-fast=true

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/oauth-db
spring.datasource.username=oauth-user
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver


#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

server.servlet.context-path=/uaa
server.port=8082

# logging config
logging.file.name=auth-service.log
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx
logging.level.org.springframework=info